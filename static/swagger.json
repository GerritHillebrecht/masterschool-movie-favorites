{
  "swagger": "2.0",
  "info": {
    "description": "API documentation for Filmster",
    "version": "1.0.0",
    "title": "Filmster API"
  },
  "host": "movie-favorites-wgu4b.ondigitalocean.app",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/movies": {
      "post": {
        "tags": [
          "Movies"
        ],
        "summary": "Add a movie",
        "description": "Adds a movie to the database using data from an external API and a form.",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The title of the movie"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to the appropriate page based on the result"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Retrieves all users from the database.",
        "responses": {
          "200": {
            "description": "List of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add a user",
        "description": "Adds a new user to the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The added user's data",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "No JSON content found in the request"
          }
        }
      }
    },
    "/users/{user_id}/update_movie/{movie_id}": {
      "put": {
        "tags": [
          "Movies"
        ],
        "summary": "Update a movie",
        "description": "Updates a specific movie for a user.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The ID of the user"
          },
          {
            "name": "movie_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The ID of the movie"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated movie's data",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user's movies",
        "description": "Retrieves movies for a specific user.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "List of movies",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Movie"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Movies"
        ],
        "summary": "Add a movie to user",
        "description": "Adds a movie to a specific user's collection.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The ID of the user"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The added movie's data",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "400": {
            "description": "No JSON content found in the request"
          }
        }
      }
    },
    "/delete_movie/{movie_id}": {
      "delete": {
        "tags": [
          "Movies"
        ],
        "summary": "Delete a movie",
        "description": "Deletes a specific movie from the database.",
        "parameters": [
          {
            "name": "movie_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The ID of the movie"
          }
        ],
        "responses": {
          "204": {
            "description": "The deleted movie's data",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        }
      }
    },
    "/directors": {
      "get": {
        "tags": [
          "Directors"
        ],
        "summary": "Get all directors",
        "description": "Retrieves all directors from the database.",
        "responses": {
          "200": {
            "description": "List of directors",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Director"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Directors"
        ],
        "summary": "Add a director",
        "description": "Adds a new director to the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Director"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The added director's data",
            "schema": {
              "$ref": "#/definitions/Director"
            }
          },
          "400": {
            "description": "No JSON content found in the request"
          }
        }
      }
    },
    "/calendar": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Get calendar events",
        "description": "Retrieves calendar events for the current user.",
        "responses": {
          "200": {
            "description": "List of calendar events",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "movie_id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "title": {
                    "type": "string"
                  },
                  "start": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "end": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "editable": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/calendar/update": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Update calendar movie",
        "description": "Updates a movie's watch date based on calendar input.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "movie_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "movie_date": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated movie data",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "404": {
            "description": "Missing data in your request"
          }
        }
      }
    },
    "/recommendations": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get movie recommendations",
        "description": "Retrieves movie recommendations from an external API.",
        "responses": {
          "200": {
            "description": "List of movie recommendations",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        }
      }
    },
    "Movie": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "plot": {
          "type": "string"
        },
        "poster": {
          "type": "string"
        },
        "watch_date": {
          "type": "string",
          "format": "date-time"
        },
        "release_year": {
          "type": "integer",
          "format": "int64"
        },
        "boxOffice": {
          "type": "string"
        },
        "runtime": {
          "type": "integer",
          "format": "int32"
        },
        "rating": {
          "type": "number",
          "format": "float"
        },
        "youtube_video_id": {
          "type": "string"
        },
        "imdbId": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "int64"
        },
        "actors": {
          "type": "string"
        },
        "writers": {
          "type": "string"
        },
        "awards": {
          "type": "string"
        },
        "genre": {
          "type": "string"
        },
        "directors": {
          "type": "string"
        }
      }
    },
    "Director": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "movies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Movie"
          }
        }
      }
    }
  }
}
